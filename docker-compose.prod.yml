
services:
  django:
    container_name: ecowiser_backend
    build: 
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    depends_on:
      - redis
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    restart: always
  
  redis:
    container_name: ecowiser_redis
    image: redis:alpine
    ports:
      - "6378:6379"
  
  celery:
    container_name: ecowiser_celery
    build: 
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A ecowiser worker -l info
    volumes:
      - .:/app
      - media_volume:/app/media
    env_file:
      - ../.env
    depends_on:
      - redis
  
  celery-beat:
    container_name: ecowiser_celery_beat
    build: 
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A ecowiser beat -l info
    volumes:
      - .:/app
      - media_volume:/app/media
    depends_on:
      - redis
    env_file:
      - ../.env
    restart: always

  nginx:
    container_name: ecowiser_nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"               
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
      - /etc/letsencrypt/live/api.harikrishna.me/fullchain.pem:/etc/letsencrypt/live/api.harikrishna.me/fullchain.pem:ro  # SSL cert
      - /etc/letsencrypt/live/api.harikrishna.me/privkey.pem:/etc/letsencrypt/live/api.harikrishna.me/privkey.pem:ro      # SSL key
    depends_on:
      - django
    restart: always


volumes:
  static_volume:
  media_volume: